{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Escape Room Communication Standard (ERCS)","text":"<p> View on GitHub</p> <p>Welcome to the official documentation for the Escape Room Communication Standard (ERCS) \u2014 a flexible, extensible messaging specification designed to enable smart, interactive components in escape rooms to communicate seamlessly, regardless of platform or transport layer.</p> <p>This standard enables escape room developers to:</p> <ul> <li>Track player progress and puzzle states across multiple devices</li> <li>Monitor hardware health and environmental sensor data</li> <li>Build thematically rich, immersive experiences using a consistent interface</li> <li>Integrate embedded systems (ESP32, Arduino), web services, and control software with ease</li> </ul>"},{"location":"#key-concepts","title":"\ud83d\udd27 Key Concepts","text":""},{"location":"#puzzles","title":"\ud83e\udde9 Puzzles","text":"<p>Each game is composed of multiple puzzles, each themed and tracked individually.</p>"},{"location":"#devices","title":"\ud83d\udce1 Devices","text":"<p>Any interactive component (button, sensor, light, lock, etc.) that communicates via ERCS.</p>"},{"location":"#messages","title":"\ud83d\udcac Messages","text":"<p>JSON-based messages represent state changes, progress, heartbeat updates, and more.</p>"},{"location":"#capabilities","title":"\ud83d\udce6 Capabilities","text":"<p>Devices advertise what they support \u2014 inputs, outputs, sensors, and more \u2014 at registration time.</p>"},{"location":"#supported-transports","title":"\ud83d\ude80 Supported Transports","text":"<p>While ERCS defines the message structure in JSON, the actual transport layer may vary depending on the device or control system:</p> <ul> <li>USB Serial</li> <li>MQTT</li> <li>WebSockets</li> <li>HTTP(S)</li> </ul>"},{"location":"#extensibility","title":"\ud83d\udd04 Extensibility","text":"<p>The standard is designed to evolve. Unknown fields and new capabilities can be added without breaking existing systems using reserved areas like:</p> <ul> <li><code>metadata</code> (for any future, non-critical information)</li> <li><code>sensors[]</code> (for modular sensor data tracking)</li> </ul>"},{"location":"#get-involved","title":"\ud83e\udd1d Get Involved","text":"<p>ERCS is a collaborative effort. Contributions, suggestions, and extensions are welcome via GitHub Issues and Pull Requests.</p> <p>Made with \u2764\ufe0f by escape room developers, for escape room developers.</p>"},{"location":"messages/ack/","title":"Message: <code>ack</code>","text":"<p>Acknowledgement message used to confirm receipt of a message, usually a <code>command</code>.</p>"},{"location":"messages/ack/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"ack\"</code> <code>uuid</code> string \u2713 UUID of responding device <code>id</code> string \u2713 URN of device <code>timestamp</code> string \u2713 When the ack was sent (ISO 8601) <code>message_id</code> string optional Original message ID, if available <code>status</code> string optional <code>ok</code>, <code>received</code>, <code>queued</code>, <code>executed</code>"},{"location":"messages/ack/#example","title":"Example","text":"<p>```json {   \"type\": \"ack\",   \"uuid\": \"ab12cd34-5678-4ef0-9a09-1234567890ab\",   \"id\": \"urn:puzzle:main_room:light_controller\",   \"timestamp\": \"2025-06-02T16:36:12Z\",   \"message_id\": \"msg-3421\",   \"status\": \"executed\" }</p>"},{"location":"messages/command/","title":"Message: <code>command</code>","text":"<p>A <code>command</code> message is sent by the controller to instruct a device to perform an action: turn on lights, reset itself, play a sound, etc.</p>"},{"location":"messages/command/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"command\"</code> <code>uuid</code> string \u2713 UUID of the target device <code>id</code> string \u2713 URN of target device <code>timestamp</code> string \u2713 When the command was sent (ISO 8601) <code>command_name</code> string \u2713 Command (e.g. <code>reset</code>, <code>play_sound</code>) <code>params</code> object optional Parameters relevant to the command"},{"location":"messages/command/#example","title":"Example","text":"<p>```json {   \"type\": \"command\",   \"uuid\": \"a1b2c3d4-e5f6-47a9-82ab-33813f79082e\",   \"id\": \"urn:puzzle:lab:audio_unit\",   \"timestamp\": \"2025-06-02T16:35:00Z\",   \"command_name\": \"play_sound\",   \"params\": {     \"clip\": \"victory\",     \"volume\": 0.8   } }</p>"},{"location":"messages/config/","title":"Message: <code>config</code>","text":"<p>The <code>config</code> message is sent when the device starts up or reconnects. It declares the device\u2019s identity, theme, capabilities, and metadata.</p>"},{"location":"messages/config/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"config\"</code> <code>uuid</code> string \u2713 UUID v4 for the device <code>id</code> string \u2713 Human-readable URN <code>timestamp</code> string \u2713 ISO 8601 UTC timestamp <code>spec_version</code> string \u2713 Version of ERCS this device follows <code>device_name</code> string \u2713 Friendly name of the device <code>theme</code> string \u2713 Theme context for puzzle <code>puzzle_type</code> string \u2713 Puzzle classification <code>capabilities</code> array \u2713 Supported hardware features <code>meta</code> object optional Arbitrary metadata like firmware version"},{"location":"messages/config/#use-case","title":"Use Case","text":"<ul> <li>Sent on startup or reconnection</li> <li>Helps the control software dynamically map and assign roles</li> </ul>"},{"location":"messages/deregister/","title":"Message: <code>deregister</code>","text":"<p>The <code>deregister</code> message is sent by a device before shutting down or rebooting intentionally, allowing the control system to update its status cleanly.</p>"},{"location":"messages/deregister/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"deregister\"</code> <code>uuid</code> string \u2713 UUID of the device <code>id</code> string \u2713 URN <code>timestamp</code> string \u2713 ISO 8601 timestamp <code>reason</code> string optional Reason for shutdown/reboot"},{"location":"messages/deregister/#example","title":"Example","text":"<p>```json {   \"type\": \"deregister\",   \"uuid\": \"acbbd0ee-28cb-42fa-a4d1-8efabf3bcddd\",   \"id\": \"urn:device:office:lightstrip01\",   \"timestamp\": \"2025-06-02T17:05:00Z\",   \"reason\": \"rebooting for firmware update\" }</p>"},{"location":"messages/error/","title":"Message: <code>error</code>","text":"<p>The <code>error</code> message is sent when a device or subsystem encounters an error. This can help with diagnostics and debugging.</p>"},{"location":"messages/error/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"error\"</code> <code>uuid</code> string \u2713 UUID of the device reporting the error <code>id</code> string \u2713 URN of device <code>timestamp</code> string \u2713 ISO 8601 timestamp <code>error_code</code> string \u2713 Unique error identifier or code <code>message</code> string optional Human-readable message <code>details</code> object optional Arbitrary diagnostic data"},{"location":"messages/error/#example","title":"Example","text":"<p>```json {   \"type\": \"error\",   \"uuid\": \"fa76d1d4-3e3a-4131-857a-ec9f6c783bc0\",   \"id\": \"urn:sensor:control_room:temp_01\",   \"timestamp\": \"2025-06-02T16:40:00Z\",   \"error_code\": \"TEMP_SENSOR_FAIL\",   \"message\": \"Temperature sensor disconnected\",   \"details\": {     \"last_value\": 22.5,     \"uptime\": 8123   } }</p>"},{"location":"messages/event/","title":"Message: <code>event</code>","text":"<p>The <code>event</code> message is used to notify the control system about discrete, meaningful occurrences like a button press, RFID scan, or incorrect entry.</p>"},{"location":"messages/event/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"event\"</code> <code>uuid</code> string \u2713 UUID of device <code>id</code> string \u2713 URN string <code>timestamp</code> string \u2713 ISO 8601 timestamp <code>event_name</code> string \u2713 Event type (e.g. <code>rfid_scanned</code>, <code>button_pressed</code>) <code>data</code> object optional Event-specific data (e.g. scanned tag ID)"},{"location":"messages/event/#example","title":"Example","text":"<p>```json {   \"type\": \"event\",   \"uuid\": \"fd4a6893-9cd2-490a-bf3c-117f2f5a213c\",   \"id\": \"urn:sensor:main_room:button_01\",   \"timestamp\": \"2025-06-02T16:32:00Z\",   \"event_name\": \"button_pressed\",   \"data\": {     \"button\": \"green\",     \"pressure\": 0.82   } }</p>"},{"location":"messages/heartbeat/","title":"Message: <code>heartbeat</code>","text":"<p>Devices send <code>heartbeat</code> messages periodically to indicate they are online and operational.</p>"},{"location":"messages/heartbeat/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"heartbeat\"</code> <code>uuid</code> string \u2713 UUID of the device <code>id</code> string \u2713 URN of the device <code>timestamp</code> string \u2713 When the heartbeat was sent (ISO 8601) <code>uptime</code> number optional Seconds since boot <code>firmware</code> string optional Firmware version <code>ip</code> string optional IP address <code>rssi</code> number optional WiFi signal strength (RSSI) <code>metadata</code> object optional Additional fields"},{"location":"messages/heartbeat/#example","title":"Example","text":"<p>```json {   \"type\": \"heartbeat\",   \"uuid\": \"c2eab712-7e44-4d3d-9511-98a450cd9d0b\",   \"id\": \"urn:device:office:rfid_01\",   \"timestamp\": \"2025-06-02T16:42:10Z\",   \"uptime\": 4551,   \"firmware\": \"v1.2.0\",   \"ip\": \"192.168.0.42\",   \"rssi\": -66,   \"metadata\": {     \"battery\": 94,     \"temperature\": 23.1   } }</p>"},{"location":"messages/puzzle_state/","title":"Message: <code>puzzle_state</code>","text":"<p>The <code>puzzle_state</code> message is used to update the control software on the current internal state of the puzzle \u2014 e.g. when the player makes progress or regresses.</p>"},{"location":"messages/puzzle_state/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"puzzle_state\"</code> <code>uuid</code> string \u2713 UUID of the device <code>id</code> string \u2713 Human-readable URN <code>timestamp</code> string \u2713 ISO 8601 timestamp <code>state</code> string \u2713 Puzzle state: <code>idle</code>, <code>in_progress</code>, <code>solved</code>, <code>failed</code>, etc. <code>progress</code> number optional Progress percentage (0\u2013100) <code>details</code> object optional Arbitrary details (e.g. stage, hint_used)"},{"location":"messages/puzzle_state/#example","title":"Example","text":"<p>```json {   \"type\": \"puzzle_state\",   \"uuid\": \"e1d7e840-a102-4b2c-a6e7-2fd8047a508a\",   \"id\": \"urn:puzzle:office:keypad_01\",   \"timestamp\": \"2025-06-02T16:25:00Z\",   \"state\": \"in_progress\",   \"progress\": 40,   \"details\": {     \"stage\": \"first_code\",     \"hint_used\": false,     \"attempts\": 2   } }</p>"},{"location":"messages/register/","title":"Message: <code>register</code>","text":"<p>The <code>register</code> message is sent by a device when it starts up or reconnects. It announces its presence and functional capabilities to the control system.</p>"},{"location":"messages/register/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"register\"</code> <code>uuid</code> string \u2713 UUID of the device <code>id</code> string \u2713 URN of the device <code>timestamp</code> string \u2713 ISO 8601 timestamp <code>theme</code> string \u2713 Name of the theme the device belongs to <code>firmware</code> string optional Firmware version <code>capabilities</code> array \u2713 List of capability strings <code>capability_metadata</code> object optional Attributes related to the capabilities <code>metadata</code> object optional Any other identifying or custom info"},{"location":"messages/register/#example","title":"Example","text":"<p>```json {   \"type\": \"register\",   \"uuid\": \"1e9080ec-0eb0-49a6-bd94-54f03a49234a\",   \"id\": \"urn:puzzle:egyptian:ankh_dial\",   \"timestamp\": \"2025-06-02T17:02:00Z\",   \"theme\": \"Ancient Egypt\",   \"firmware\": \"v0.9.3\",   \"capabilities\": [     \"sensor.rfid\",     \"puzzle.pattern_match\"   ],   \"capability_metadata\": {     \"sensor.rfid\": {       \"antenna\": \"circular\",       \"range_cm\": 8     },     \"puzzle.pattern_match\": {       \"pattern_slots\": 4     }   },   \"metadata\": {     \"location\": \"Main Chamber\",     \"manufacturer\": \"RoomTech\",     \"board\": \"ESP32\"   } }</p>"},{"location":"messages/status_update/","title":"Message: <code>status_update</code>","text":"<p>The <code>status_update</code> message is used to report non-error, non-puzzle state sensor or subsystem values (e.g. current temperature, lighting level, battery, etc.).</p>"},{"location":"messages/status_update/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"status_update\"</code> <code>uuid</code> string \u2713 UUID of the device <code>id</code> string \u2713 URN <code>timestamp</code> string \u2713 ISO 8601 time <code>sensors</code> array \u2713 List of sensor readings"},{"location":"messages/status_update/#sensor-object-format","title":"Sensor Object Format","text":"<p>Each item in <code>sensors[]</code> is an object:</p> Field Type Required Description <code>name</code> string \u2713 Sensor name <code>type</code> string \u2713 Sensor type (e.g. <code>temperature</code>) <code>unit</code> string optional e.g. <code>\"C\"</code>, <code>\"%\"</code>, <code>\"dBm\"</code> <code>value</code> number \u2713 Current reading <code>meta</code> object optional Additional details"},{"location":"messages/status_update/#example","title":"Example","text":"<p>```json {   \"type\": \"status_update\",   \"uuid\": \"2a31f910-587a-4704-9119-b13b04a8d12f\",   \"id\": \"urn:device:lab:envsensor_02\",   \"timestamp\": \"2025-06-02T16:45:00Z\",   \"sensors\": [     {       \"name\": \"temp\",       \"type\": \"temperature\",       \"unit\": \"C\",       \"value\": 21.7     },     {       \"name\": \"humidity\",       \"type\": \"humidity\",       \"unit\": \"%\",       \"value\": 58.2     },     {       \"name\": \"wifi\",       \"type\": \"rssi\",       \"unit\": \"dBm\",       \"value\": -61     }   ] }</p>"},{"location":"messages/status_updates/","title":"Message: <code>status_update</code>","text":"<p>The <code>status_update</code> message is sent periodically by a device to report its current status and telemetry data. This acts as a heartbeat and ensures the controller knows the device is online.</p>"},{"location":"messages/status_updates/#fields","title":"Fields","text":"Field Type Required Description <code>type</code> string \u2713 <code>\"status_update\"</code> <code>uuid</code> string \u2713 Unique device identifier (UUID v4) <code>id</code> string \u2713 Human-readable URN <code>timestamp</code> string \u2713 ISO 8601 timestamp <code>spec_version</code> string \u2713 ERCS version (e.g. <code>1.0.0</code>) <code>device_name</code> string \u2713 Friendly name for display purposes <code>theme</code> string \u2713 Puzzle theme (e.g. <code>Ancient Egypt</code>) <code>puzzle_type</code> string \u2713 Puzzle classification <code>state</code> string \u2713 One of: <code>idle</code>, <code>active</code>, <code>solved</code>, <code>error</code>, etc. <code>capabilities</code> array \u2713 List of supported features <code>sensors</code> array optional List of current sensor readings <code>meta</code> object optional Misc metadata (e.g. uptime, version)"},{"location":"messages/status_updates/#example","title":"Example","text":"<p>See example-status-update.json</p>"},{"location":"structure/capabilities/","title":"Capabilities","text":"<p>The <code>capabilities</code> field is an array of strings describing what the device can do. This helps the control system dynamically interact with hardware.</p>"},{"location":"structure/capabilities/#examples","title":"Examples","text":"<ul> <li><code>led</code></li> <li><code>rfid</code></li> <li><code>audio_playback</code></li> <li><code>vibration</code></li> <li><code>servo</code></li> <li><code>touch_panel</code></li> <li><code>pressure_pad</code></li> <li><code>temperature_sensor</code></li> </ul>"},{"location":"structure/message_structure/","title":"Message Structure","text":"<p>This document outlines the common fields that appear in all ERCS messages.</p>"},{"location":"structure/message_structure/#required-fields","title":"Required Fields","text":"Field Type Description <code>type</code> string Type of message <code>uuid</code> string Unique device ID (UUID v4) <code>id</code> string Human-readable URN <code>timestamp</code> string ISO 8601 timestamp <code>spec_version</code> string Version of the protocol <code>device_name</code> string Friendly name for display <code>theme</code> string Puzzle theme context <code>puzzle_type</code> string Type of puzzle (e.g. memory, lock, sensor) <code>state</code> string Current device state <code>capabilities</code> array List of device functions"},{"location":"structure/message_structure/#optional-fields","title":"Optional Fields","text":"<ul> <li><code>sensors[]</code>: Array of current sensor readings</li> <li><code>meta</code>: Extra metadata (firmware, uptime, etc.)</li> </ul>"},{"location":"structure/naming/","title":"Naming Convention","text":"<p>Devices are identified with a structured URN string.</p>"},{"location":"structure/naming/#format","title":"Format","text":"<pre><code>urn:{role}:{location}:{name}\n</code></pre>"},{"location":"structure/naming/#examples","title":"Examples","text":"<ul> <li><code>urn:puzzle:main_room:torch_01</code></li> <li><code>urn:controller:core:main_hub</code></li> <li><code>urn:sensor:lobby:temp_01</code></li> </ul>"},{"location":"structure/naming/#roles","title":"Roles","text":"Role Description <code>puzzle</code> Puzzle logic or controller <code>sensor</code> Telemetry-only device <code>controller</code> Main game controller"},{"location":"structure/sensors/","title":"Sensors Format","text":"<p>Sensors report physical values or internal telemetry (e.g., temperature, battery level, WiFi signal).</p>"},{"location":"structure/sensors/#format","title":"Format","text":"<pre><code>{\n  \"name\": \"battery\",\n  \"type\": \"percent\",\n  \"value\": 87,\n  \"unit\": \"%\",\n  \"timestamp\": \"2025-06-02T15:04:00Z\"\n}\n</code></pre>"},{"location":"structure/sensors/#common-sensor-types","title":"Common Sensor Types","text":"Name Type Unit battery percent % temperature float \u00b0C wifi_signal dBm dBm rssi integer dBm humidity percent % pressure float hPa"}]}